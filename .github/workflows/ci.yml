name: Backend CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x' 

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Run linter
        run: npm run lint
        working-directory: ./backend

  run-backend-tests:
    runs-on: ubuntu-latest
    needs: lint-backend

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: x99db_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Run migrations on test database
        run: npm run test:prepare
        working-directory: ./backend
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5433/x99db_test?schema=public"
          REDIS_URL: "redis://localhost:6379"
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}

      - name: Run backend tests
        run: npm test
        working-directory: ./backend
        env:
          DATABASE_URL: "postgresql://user:password@localhost:5433/x99db_test?schema=public"
          REDIS_URL: "redis://localhost:6379"
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}