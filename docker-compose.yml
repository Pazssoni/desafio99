version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - '8080:80'
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    ports:
      - '3333:3333'
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/x99db?schema=public"
      REDIS_URL: "redis://redis:6379"
      JWT_ACCESS_SECRET: "your_super_secret_access_key"
      JWT_REFRESH_SECRET: "your_super_secret_refresh_key"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: x99db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d x99db"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_test:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: x99db_test
    ports:
      - '5433:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.5-alpine
    ports:
      - '6379:6379'

volumes:
  postgres_data:
  postgres_test_data: